#下载备份文件所需
server.port=8080
ip=127.0.0.1
#暴露接口
management.endpoints.web.exposure.include=env,refresh
#sqlserver
#spring.base.datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
#基础数据源  系统自带的数据库,基础数据.bak恢复指向
spring.base.datasource.url=jdbc:sqlserver://localhost:1433;DatabaseName=data_gather
spring.base.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.base.datasource.username=sa
spring.base.datasource.password=123456
spring.base.datasource.type=com.alibaba.druid.pool.DruidDataSource
#连接池的设置
#初始化时建立物理连接的个数
spring.base.datasource.initialSize=5
#最小连接池数量
spring.base.datasource.minIdle=5
#最大连接池数量 maxIdle已经不再使用
spring.base.datasource.maxActive=20
#获取连接时最大等待时间，单位毫秒
spring.base.datasource.maxWait=60000
#申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.base.datasource.testWhileIdle=true
#既作为检测的间隔时间又作为testWhileIdel执行的依据
spring.base.datasource.timeBetweenEvictionRunsMillis=60000
#销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接
spring.base.datasource.minEvictableIdleTimeMillis=30000
#用来检测连接是否有效的sql 必须是一个查询语句
#mysql中为 select 'x'
#oracle中为 select 1 from dual
spring.base.datasource.validationQuery=select 'x'
#申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
spring.base.datasource.testOnBorrow=false
#归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
spring.base.datasource.testOnReturn=false
#是否缓存preparedStatement,mysql5.5+建议开启
spring.base.datasource.poolPreparedStatements=true
#当值大于0时poolPreparedStatements会自动修改为true
spring.base.datasource.maxPoolPreparedStatementPerConnectionSize=20
#配置扩展插件
spring.base.datasource.filters=stat,wall,slf4j
#通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.base.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#合并多个DruidDataSource的监控数据
spring.base.datasource.useGlobalDataSourceStat=true
#来源数据源  .bak文件恢复的数据库指向
spring.source.datasource.url=jdbc:sqlserver://localhost:1433;DatabaseName=zw0004
spring.source.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.source.datasource.username=sa
spring.source.datasource.password=123456
spring.source.datasource.druid.initial-size=5
spring.source.datasource.type=com.alibaba.druid.pool.DruidDataSource
#连接池的设置
#初始化时建立物理连接的个数
spring.source.datasource.initialSize=5
#最小连接池数量
spring.source.datasource.minIdle=5
#最大连接池数量 maxIdle已经不再使用
spring.source.datasource.maxActive=20
#获取连接时最大等待时间，单位毫秒
spring.source.datasource.maxWait=60000
#申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.source.testWhileIdle=true
#既作为检测的间隔时间又作为testWhileIdel执行的依据
spring.source.datasource.timeBetweenEvictionRunsMillis=60000
#销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接
spring.source.datasource.minEvictableIdleTimeMillis=30000
#用来检测连接是否有效的sql 必须是一个查询语句
#mysql中为 select 'x'
#oracle中为 select 1 from dual
spring.source.datasource.validationQuery=select 'x'
#申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
spring.source.datasource.testOnBorrow=false
#归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
spring.source.datasource.testOnReturn=false
#是否缓存preparedStatement,mysql5.5+建议开启
spring.source.datasource.poolPreparedStatements=true
#当值大于0时poolPreparedStatements会自动修改为true
spring.source.datasource.maxPoolPreparedStatementPerConnectionSize=20
#配置扩展插件
spring.source.datasource.filters=stat,wall,slf4j
#通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.source.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#合并多个DruidDataSource的监控数据
spring.source.datasource.useGlobalDataSourceStat=true
#目标数据源  汇总后12张表所在数据库指向
spring.target.datasource.url=jdbc:sqlserver://localhost:1433;DatabaseName=zyconvert
spring.target.datasource.username=sa
spring.target.datasource.password=123456
spring.target.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.target.datasource.type=com.alibaba.druid.pool.DruidDataSource
target.databaseName=zyconvert
spring.devtools.restart.additional-paths=src/main/*
#连接池的设置
#初始化时建立物理连接的个数
spring.target.datasource.initialSize=5
#最小连接池数量
spring.target.datasource.minIdle=5
#最大连接池数量 maxIdle已经不再使用
spring.target.datasource.maxActive=20
#获取连接时最大等待时间，单位毫秒
spring.target.datasource.maxWait=60000
#申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.target.datasource.testWhileIdle=true
#既作为检测的间隔时间又作为testWhileIdel执行的依据
spring.target.datasource.timeBetweenEvictionRunsMillis=60000
#销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接
spring.target.datasource.minEvictableIdleTimeMillis=30000
#用来检测连接是否有效的sql 必须是一个查询语句
#mysql中为 select 'x'
#oracle中为 select 1 from dual
spring.target.datasource.validationQuery=select 'x'
#申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
spring.target.datasource.testOnBorrow=false
#归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
spring.target.datasource.testOnReturn=false
#是否缓存preparedStatement,mysql5.5+建议开启
spring.target.datasource.poolPreparedStatements=true
#当值大于0时poolPreparedStatements会自动修改为true
spring.target.datasource.maxPoolPreparedStatementPerConnectionSize=20
#配置扩展插件
spring.target.datasource.filters=stat,wall,slf4j
#通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.target.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#合并多个DruidDataSource的监控数据
spring.target.datasource.useGlobalDataSourceStat=true
#Mybatis
logging.level.com.ky.dbbak.mapper=debug
logging.level.com.ky.dbbak.sourcemapper=debug
logging.level.com.ky.dbbak.targetmapper=debug
#multipart
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=100MB
#配置数据源所需
dbip=127.0.0.1
dbport=1433
dbname=zw0004
name=sa
dbpass=123456
localport=1433
#license配置
license.subject=ky-license
license.publicAlias=publicCert
license.storePass=public_password1234
license.licensePath=E:/license/license.lic
license.publicKeysStorePath=E:/license/publicCerts.keystore
